// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SASSTS.Persistence.Context;

#nullable disable

namespace SASSTS.Persistence.Migrations
{
    [DbContext(typeof(SASSTSContext))]
    partial class SASSTSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SASSTS.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_LOGIN_DATE")
                        .HasColumnOrder(5);

                    b.Property<string>("LastUserIp")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_LOGIN_IP")
                        .HasColumnOrder(6);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PASSWORD")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("ACCOUNTS", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BILL_DATE")
                        .HasColumnOrder(4);

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("BILL_NUMBER")
                        .HasColumnOrder(5);

                    b.Property<string>("BillType")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BILL_TYPE")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DISCOUNT")
                        .HasColumnOrder(11);

                    b.Property<int>("KDV")
                        .HasColumnType("int")
                        .HasColumnName("KDV")
                        .HasColumnOrder(10);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRICE")
                        .HasColumnOrder(12);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(3);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnOrder(8);

                    b.Property<decimal?>("TotalDiscount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_DISCOUNT")
                        .HasColumnOrder(14);

                    b.Property<decimal>("TotalKDV")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_KDV")
                        .HasColumnOrder(15);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_PRICE")
                        .HasColumnOrder(16);

                    b.Property<decimal>("TotalUnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_UNIT_PRICE")
                        .HasColumnOrder(13);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UNIT_PRICE")
                        .HasColumnOrder(9);

                    b.Property<int>("WholesalerId")
                        .HasColumnType("int")
                        .HasColumnName("WHOLESALER_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("WholesalerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WHOLESALER_NAME")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("BILLS", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CATEGORY_NAME")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.HasKey("Id");

                    b.ToTable("CATEGORIES", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyManagerId")
                        .HasColumnType("int")
                        .HasColumnName("COMPANY_MANAGER_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("CompanyManagerName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("COMPANY_MANAGER_NAME")
                        .HasColumnOrder(3);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMPANY_NAME")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.HasKey("Id");

                    b.HasIndex("CompanyManagerId");

                    b.ToTable("COMPANIES", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnOrder(9);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEPARTMENT_NAME")
                        .HasColumnOrder(10);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL")
                        .HasColumnOrder(5);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("GENDER")
                        .HasColumnOrder(7);

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IDENTITY_NUMBER")
                        .HasColumnOrder(2);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(3);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PASSWORD")
                        .HasColumnOrder(8);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nchar(11)")
                        .HasColumnName("PHONE")
                        .HasColumnOrder(6);

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("ROLE")
                        .HasColumnOrder(11);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SURNAME")
                        .HasColumnOrder(4);

                    b.Property<int?>("UserAuthorizations")
                        .HasColumnType("int")
                        .HasColumnName("USER_AUTHORIZATION")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CUSTOMERS", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("COMPANY_ID")
                        .HasColumnOrder(3);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMPANY_NAME")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<int?>("DepartmentManagerId")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTMENT_MANAGER_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("DepartmentManagerName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DEPARTMENT_MANAGER_NAME")
                        .HasColumnOrder(4);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEPARTMENT_NAME")
                        .HasColumnOrder(5);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentManagerId");

                    b.ToTable("DEPARTMENTS", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PriceOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnOrder(3);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_NAME")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DELIVERY_DATE")
                        .HasColumnOrder(12);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(4);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnOrder(7);

                    b.Property<int>("PurchaseRequestId")
                        .HasColumnType("int")
                        .HasColumnName("PURCHASE_REQUEST_ID")
                        .HasColumnOrder(2);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_PRICE")
                        .HasColumnOrder(11);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UNIT_PRICE")
                        .HasColumnOrder(10);

                    b.Property<int>("WholesalerId")
                        .HasColumnType("int")
                        .HasColumnName("WHOLESALER_ID")
                        .HasColumnOrder(5);

                    b.Property<string>("WholesalerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WHOLESALER_NAME")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseRequestId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("PRICE_OFFERS", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT")
                        .HasColumnOrder(3);

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORY_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CATEGORY_NAME")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<int?>("PriceOfferId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnOrder(3);

                    b.Property<int?>("PurchaseRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasedProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UNIT_PRICE")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PriceOfferId");

                    b.HasIndex("PurchaseRequestId");

                    b.HasIndex("PurchasedProductId");

                    b.ToTable("PRODUCTS", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PurchaseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT")
                        .HasColumnOrder(11);

                    b.Property<int?>("ApprovingCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("APPROVING_CUSTOMER_ID")
                        .HasColumnOrder(5);

                    b.Property<string>("ApprovingCustomerName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPROVING_CUSTOMER_NAME")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<int?>("OfferCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("OFFER_CUSTOMER_ID")
                        .HasColumnOrder(4);

                    b.Property<string>("OfferCustomerName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OFFER_CUSTOMER_NAME")
                        .HasColumnOrder(7);

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PRODUCT_DESCRIPTION")
                        .HasColumnOrder(10);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnOrder(9);

                    b.Property<int>("RequestCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("REQUEST_CUSTOMER_ID")
                        .HasColumnOrder(3);

                    b.Property<string>("RequestCustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REQUEST_CUSTOMER_NAME")
                        .HasColumnOrder(6);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestCustomerId");

                    b.ToTable("PURCHASE_REQUEST", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PurchasedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnOrder(4);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_NAME")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DELIVERY_DATE")
                        .HasColumnOrder(13);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<int>("PriceOfferId")
                        .HasColumnType("int")
                        .HasColumnName("PRICE_OFFER_ID")
                        .HasColumnOrder(3);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(5);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnOrder(8);

                    b.Property<int>("PurchaseRequestId")
                        .HasColumnType("int")
                        .HasColumnName("PURCHASE_REQUEST_ID")
                        .HasColumnOrder(2);

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_PRICE")
                        .HasColumnOrder(12);

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("UNIT_PRICE")
                        .HasColumnOrder(11);

                    b.Property<int>("WholesalerId")
                        .HasColumnType("int")
                        .HasColumnName("WHOLESALER_ID")
                        .HasColumnOrder(6);

                    b.Property<string>("WholesalerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WHOLESALER_NAME")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PriceOfferId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseRequestId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("PURCHASED_PRODUCT", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Wholesaler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ADDRESS")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(26);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CREATED_BY")
                        .HasColumnOrder(27);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(30)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(28);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("PHONE")
                        .HasColumnOrder(3);

                    b.Property<string>("WholesalerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WHOLESALER_NAME")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("WHOLESALER", (string)null);
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Account", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Customer", "Customer")
                        .WithOne("Account")
                        .HasForeignKey("SASSTS.Domain.Entities.Account", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Bill", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Product", "Product")
                        .WithMany("Bills")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("BILL_PRODUCT_PRODUCT_ID");

                    b.HasOne("SASSTS.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("Bills")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("BILL_WHOLESALER_WHOLESALER_ID");

                    b.Navigation("Product");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Company", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Customer", "Customer")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyManagerId")
                        .HasConstraintName("COMPANY_CUSTOMER_CUSTOMER_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Customer", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Department", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("DEPARTMENT_COMPANY_COMPANY_ID");

                    b.HasOne("SASSTS.Domain.Entities.Customer", "Customer")
                        .WithMany("Departments")
                        .HasForeignKey("DepartmentManagerId")
                        .HasConstraintName("DEPARTMENT_CUSTOMER_CUSTOMER_ID");

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PriceOffer", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Customer", "Customer")
                        .WithMany("PriceOffers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PRICE_OFFER_CUSTOMER_CUSTOMER_ID");

                    b.HasOne("SASSTS.Domain.Entities.Product", "Product")
                        .WithMany("PriceOffers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PRICE_OFFER_PRODUCT_PRODUCT_ID");

                    b.HasOne("SASSTS.Domain.Entities.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PriceOffers")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("PRICE_OFFER_PURCHASE_REQUEST_PURCHASE_REQUEST_ID");

                    b.HasOne("SASSTS.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("PriceOffers")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PRICE_OFFER_WHOLESALER_WHOLESALER_ID");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Product", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Bill", null)
                        .WithMany("Products")
                        .HasForeignKey("BillId");

                    b.HasOne("SASSTS.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PRODUCT_CATEGORY_CATEGORY_ID");

                    b.HasOne("SASSTS.Domain.Entities.PriceOffer", null)
                        .WithMany("Products")
                        .HasForeignKey("PriceOfferId");

                    b.HasOne("SASSTS.Domain.Entities.PurchaseRequest", null)
                        .WithMany("Products")
                        .HasForeignKey("PurchaseRequestId");

                    b.HasOne("SASSTS.Domain.Entities.PurchasedProduct", null)
                        .WithMany("Products")
                        .HasForeignKey("PurchasedProductId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PurchaseRequest", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Product", "Product")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PURCHASE_REQUEST_PRODUCT_PRODUCT_ID");

                    b.HasOne("SASSTS.Domain.Entities.Customer", "Customer")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("RequestCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PURCHASE_REQUEST_CUSTOMER_REQUEST_CUSTOMER_ID");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PurchasedProduct", b =>
                {
                    b.HasOne("SASSTS.Domain.Entities.Customer", "Customer")
                        .WithMany("PurchasedProducts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PURCHASED_PRODUCT_CUSTOMER_CUSTOMER_ID");

                    b.HasOne("SASSTS.Domain.Entities.PriceOffer", "PriceOffers")
                        .WithMany("PurchasedProducts")
                        .HasForeignKey("PriceOfferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("PURCHASED_PRODUCT_PRICE_OFFER_PRICE_OFFER_ID");

                    b.HasOne("SASSTS.Domain.Entities.Product", "Product")
                        .WithMany("PurchasedProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PURCHASED_PRODUCT_PRODUCT_PRODUCT_ID");

                    b.HasOne("SASSTS.Domain.Entities.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PurchasedProducts")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("PURCHASED_PRODUCT_PURCHASE_REQUEST_PURCHASE_REQUEST_ID");

                    b.HasOne("SASSTS.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("PurchasedProducts")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PURCHASED_PRODUCT_WHOLESALER_WHOLESALER_ID");

                    b.Navigation("Customer");

                    b.Navigation("PriceOffers");

                    b.Navigation("Product");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Bill", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Company", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Departments");

                    b.Navigation("PriceOffers");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("PurchasedProducts");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PriceOffer", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("PurchasedProducts");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Product", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PriceOffers");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("PurchasedProducts");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PurchaseRequest", b =>
                {
                    b.Navigation("PriceOffers");

                    b.Navigation("Products");

                    b.Navigation("PurchasedProducts");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.PurchasedProduct", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SASSTS.Domain.Entities.Wholesaler", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PriceOffers");

                    b.Navigation("PurchasedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
